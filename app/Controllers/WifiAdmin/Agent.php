<?php
/**
 * User: yongli
 * Date: 17/12/8
 * Time: 13:37
 * Email: yong.li@szypwl.com
 * Copyright: 深圳优品未来科技有限公司
 */
namespace App\Controllers\WifiAdmin;

use Agent\AgentModel;
use WifiAdmin\AgentPay;
use WifiAdmin\AuthTplModel;
use App\Controllers\BaseAdmin;
use WifiAdmin\AgentLevelModel;
use Illuminate\Database\Capsule\Manager as DB;

/**
 * 代理商管理动作
 */
class Agent extends BaseAdmin
{
    /**
     * 构造方法
     */
    public function initialization()
    {
        parent::initialization(); // TODO: Change the autogenerated stub
        $this->doLoadID(400);
    }

    /**
     * [ShowAjaxError 显示ajax错误信息]
     *
     * @param [type] $msg [description]
     */
    private function ShowAjaxError($msg)
    {
        $data['msg']   = $msg;
        $data['error'] = 1;
        $this->ajaxReturn($data);
    }

    /**
     * 代理商列表
     */
    public function index()
    {
        $build  = AgentModel::select(['id', 'account', 'name', 'add_time', 'linker', 'phone', 'money']);
        $num    = $build->count();
        $result = $build->orderBy('add_time desc')->skip(($this->page - 1) * $this->perPage)->take($this->perPage)->get()->toArray();
        // 获得分页配置
        $config = set_page_config($num, $this->url, 3, $this->perPage);
        // 实例化分页类
        $pagination = \Config\Services::pagination();
        // 初始化分页配置
        $pagination->initialize($config);
        $page = $pagination->create_links();
        // 分配页码
        $this->assign('page', $page);
        // 分配代理商数据
        $this->assign('lists', $result);
        $this->display();
    }

    /**
     * [add 添加代理商]
     */
    public function add()
    {
        $post = $this->request->getPost();
        // 判断是否有POST数据提交
        if ($post) {
            // 设置添加时间
            $post['add_time']    = time();
            $post['create_time'] = time();
            // 设置更新时间
            $post['update_time'] = time();
            // 代理等级不能为空
            if (!$post['level'] || intval($post['level'] < 0)) {
                call_back(2, '', '请选择代理商级别!');
            }
            // 代理商密码加密
            $_POST['password'] = md5($_POST['password']);
            $status            = AgentModel::insertGetId($post);
            $status ? call_back(0) : call_back(2, '', '操作失败!');
        } else {
            $level = AgentLevelModel::select(['id', 'title'])->whereState(1)->get()->toArray();
            // 分配代理商等级数据
            $this->assign('level', $level);
            $this->display();
        }
    }

    /**
     * 编辑代理商
     */
    public function edit()
    {
        $post = $this->request->getPost();
        // 判断是否有POST数据提交
        if ($post) {
            // 设置更新时间
            $post['update_time'] = time();
            // 代理商等级不能为空
            if (!$post['level'] || intval($post['level'])) {
                $this->ShowAjaxError('请选择代理商级别');
            }
            // 密码不能为空
            if ($post['password']) {
                // 对密码加密
                $post['password'] = md5($post['password']);
            } else {
                // 密码为空，就删除$_POST['password']
                unset($post['password']);
            }
            $status = AgentModel::whereId($post['id'])->update($post);
            $status ? call_back(0) : call_back(2, '', '操作失败!');
        } else {
            $level = AgentLevelModel::select(['id', 'title'])->whereState(1)->get()->toArray();
            // 分配当前代理商等级数据
            $this->assign('level', $level);
            $info = AgentModel::select('*')->whereId($this->request->getGet('id'))->get()->toArray();
            $info = $info ? $info[0] : [];
            $this->assign('info', $info);
            $this->display();
        }
    }

    /**
     * 删除代理商
     *
     * @param $id
     */
    public function del($id)
    {
        // 获得当前代理商旗下的子代理商数据
        $count = \ShopModel::select('pid')->wherePid($id)->count();
        $count == 0 ? call_back(2, '', '当前代理商包含商户账号，不能删除!') : '';
        $status = AgentModel::whereId($id)->update(['is_delete' => 1]);
        $status ? call_back(0) : call_back(2, '', '操作失败!');
    }

    /**
     * 代理商等级列表
     */
    public function level()
    {
        $build  = AgentLevelModel::select(['id', 'title', 'open_pay', 'add_time', 'state'])->whereState(1);
        $num    = $build->count();
        $result = $build->orderBy('add_time desc')->skip(($this->page - 1) * $this->perPage)->take($this->perPage)->get()->toArray();
        // 获得分页配置
        $config = set_page_config($num, $this->url, 3, $this->perPage);
        // 实例化分页类
        $pagination = \Config\Services::pagination();
        // 初始化分页配置
        $pagination->initialize($config);
        $page = $pagination->create_links();
        // 分配页码
        $this->assign('page', $page);
        // 分配正常状态的代理商等级数据
        $this->assign('lists', $result);
        $this->display();
    }

    /**
     * 添加代理商等级
     */
    public function addLevel()
    {
        $post = $this->request->getPost();
        // 判断是否有POST数据提交
        if ($post) {
            $post['create_time'] = time();
            $post['update_time'] = time();
            $post['create_by']   = $this->uid;
            $post['update_by']   = $this->uid;
            $status              = AgentLevelModel::insertGetId($post);
            $status ? call_back(0) : call_back(2, '', '操作失败!');
        } else {
            // 显示添加界面
            $this->display();
        }
    }

    /**
     * 编辑代理商等级
     */
    public function editLevel()
    {
        $post = $this->request->getPost();
        // 实例化一个对agentlevel表操作的对象
        $db = D('Agentlevel');
        // 判断是否有POST数据提交
        if ($post) {
            $post['update_time'] = time();
            $status              = AgentLevelModel::whereId($post['id'])->update($post);
            $status ? call_back(0) : call_back(2, '', '操作失败!');
        } else {
            $info = AgentLevelModel::select('*')->whereId($this->request->getGet('id'))->get()->toArray();
            $info = $info ? $info[0] : [];
            $this->assign('info', $info);
            $this->display();
        }
    }

    /**
     * 删除代理商等级
     *
     * @param $id
     */
    public function delLevel($id)
    {
        // 统计当前要删除的代理商等级下的代理商数据
        $count = AgentModel::select('id')->whereLevel($id)->count();
        $count > 0 ? call_back(2, '', '当前等级包含代理商账号，不能删除');
        $status = AgentLevelModel::whereId($id)->update(['is_delete' => 1]);
        $status ? call_back(0) : call_back(2, '', '操作失败!');
    }

    /**
     * 费用进出记录列表
     */
    public function payList()
    {
        $build  = AgentPay::select('*')->with([
            'getAgent' => function ($query) {
                $query->select(['id', 'name']);
            }
        ]);
        $num    = $build->count();
        $result = $build->orderBy('add_time desc')->skip(($this->page - 1) * $this->perPage)->take($this->perPage)->get()->toArray();
        // 获得分页配置
        $config = set_page_config($num, $this->url, 3, $this->perPage);
        // 实例化分页类
        $pagination = \Config\Services::pagination();
        // 初始化分页配置
        $pagination->initialize($config);
        $page = $pagination->create_links();
        // 分配页码
        $this->assign('page', $page);
        // 分配代理商的账号、代理商名称，操作日期，操作类型
        $this->assign('lists', $result);
        $this->display();
    }

    /**
     * 账号调整(扣款记录)
     */
    public function doPay()
    {
        $post = $this->request->getPost();
        // 判断是否有POST数据提交
        if ($post) {
            // 获得当前代理商的信息
            $info = AgentModel::select(['id', 'account', 'money'])->whereId($post['aid'])->get()->toArray();
            $info = $info ? $info[0] : [];
            !$info ? call_back(2, '', '没有此代理商信息!') : '';
            // 实例化一个对agentpay表操作对象
            $db = D('Agentpay');
            // 获得当前代理商账号的余额
            $post['old_money'] = !$info['money'] ? 0 : $info['money'];
            // 获得支付的金额
            $pay = !$post['pay_money'] ? 0 : $post['pay_money'];
            // 操作类型
            if ($post['do'] == '0') {
                if ($post['old_money'] < $pay) {
                    call_back(2, '', '当前帐号余额不足，无法扣款!');
                }
                $post['now_money'] = $post['old_money'] - $pay;
            } else {
                $post['now_money'] = $post['old_money'] + $pay;
            }
            $post['create_time'] = time();
            $post['update_time'] = time();
            $post['create_by']   = $this->uid;
            $post['update_by']   = $this->uid;
            $build               = AuthTplModel::select();
            $build->getConnection()->beginTransaction();
            $status = AuthTplModel::insertGetId($post);
            if ($post['do'] == '0') {
                // 字段值自减
                $status1 = DB::table('wifi_agent')->decrement('money', $pay);
            } else {
                // 字段值自增
                $status1 = DB::table('wifi_agent')->increment('money', $pay);
            }
            if ($status && $status1) {
                // 提交事务
                $build->getConnection()->commit();
                call_back(0);
            } else {
                // 回滚事务
                $build->getConnection()->rollBack();
                call_back(2, '', '操作失败!');
            }
        } else {
            // 获得当前代理商的信息
            $info = AgentModel::select([
                'id',
                'account',
                'money'
            ])->whereId($this->request->getGet('id'))->get()->toArray();
            $info = $info ? $info[0] : [];
            // 分配当前代理商信息
            $this->assign('info', $info);
            $this->display();
        }
    }
}